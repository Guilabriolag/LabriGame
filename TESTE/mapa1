<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no, viewport-fit=cover">
  <title>ZYRO v0.2 - Sobreviv√™ncia Espacial</title>
  <style>
    html, body {
      margin: 0;
      padding: 0;
      height: 100%;
      width: 100%;
      overflow: hidden;
      background: #222;
      font-family: 'Orbitron', Arial, sans-serif;
    }
    canvas {
      display: block;
      background: #1e293b;
    }
    #hud {
      position: absolute;
      top: 10px; left: 10px;
      color: white;
      font: bold 14px Arial;
      background: rgba(0,0,0,0.7);
      padding: 8px 12px;
      border-radius: 10px;
      border: 2px solid #00bfff;
      z-index: 100;
    }
    #survival-hud {
      position: absolute;
      top: 10px; right: 10px;
      background: rgba(0,0,0,0.9);
      color: white;
      padding: 10px;
      border-radius: 10px;
      border: 2px solid #00bfff;
      font: 12px Arial;
      z-index: 100;
    }
    .survival-bar { width: 100px; height: 8px; background: rgba(255,255,255,0.2); border-radius: 4px; margin: 3px 0; overflow: hidden; }
    .survival-fill { height: 100%; transition: width 0.3s ease; }
    .hunger { background: linear-gradient(90deg,#ff6b35,#f7931e);}
    .thirst { background: linear-gradient(90deg,#4fc3f7,#29b6f6);}
    .oxygen { background: linear-gradient(90deg,#66bb6a,#43a047);}
    .energy { background: linear-gradient(90deg,#ffa726,#ff9800);}

    #joystick {
      position: absolute;
      bottom: 80px; left: 30px;
      width: 120px; height: 120px;
      background: radial-gradient(circle,rgba(0,191,255,0.3),rgba(0,191,255,0.1));
      border: 3px solid rgba(0,191,255,0.6);
      border-radius: 50%;
      touch-action: none;
    }
    #stick {
      position: absolute;
      left: 50%; top: 50%;
      width: 50px; height: 50px;
      background: linear-gradient(135deg,#00bfff,#0080ff);
      border: 2px solid white; border-radius: 50%;
      transform: translate(-50%,-50%);
      box-shadow: 0 0 10px rgba(0,191,255,0.6);
    }
    .button {
      position: absolute; width: 60px; height: 60px;
      border-radius: 50%; color: white; font: bold 18px Arial;
      text-align: center; line-height: 60px;
      background: rgba(0,0,0,0.8); border: 3px solid;
      cursor: pointer; transition: all 0.2s ease;
    }
    .button:active { transform: scale(0.95);}
    #buttonA { bottom:80px; right:140px; background:linear-gradient(135deg,#dc2626,#991b1b); border-color:#ef4444;}
    #buttonB { bottom:150px; right:70px; background:linear-gradient(135deg,#2563eb,#1d4ed8); border-color:#3b82f6;}
    #buttonC { bottom:80px; right:70px; background:linear-gradient(135deg,#16a34a,#15803d); border-color:#22c55e;}
    #buttonD { bottom:150px; right:140px; background:linear-gradient(135deg,#ea580c,#c2410c); border-color:#f97316;}
    #mission-panel {
      position:absolute; top:10px; left:50%; transform:translateX(-50%);
      background:rgba(0,0,0,0.7); color:white; font:12px Arial;
      border:2px solid #00bfff; border-radius:10px; padding:10px;
      z-index:200; width:220px;
    }
  </style>
</head>
<body>
  <canvas id="game"></canvas>
  <div id="hud">√Årea: Nave Danificada</div>
  <div id="survival-hud">
    <div>üçñ Fome: <div class="survival-bar"><div class="survival-fill hunger" style="width:80%"></div></div></div>
    <div>üíß Sede: <div class="survival-bar"><div class="survival-fill thirst" style="width:60%"></div></div></div>
    <div>ü´Å O¬≤: <div class="survival-bar"><div class="survival-fill oxygen" style="width:90%"></div></div></div>
    <div>‚ö° Energia: <div class="survival-bar"><div class="survival-fill energy" style="width:70%"></div></div></div>
  </div>
  <div id="joystick"><div id="stick"></div></div>
  <div id="buttonA" class="button">A</div>
  <div id="buttonB" class="button">B</div>
  <div id="buttonC" class="button">C</div>
  <div id="buttonD" class="button">D</div>
  <div id="mission-panel"></div>

  <script>
    const canvas=document.getElementById("game"),ctx=canvas.getContext("2d");
    canvas.width=innerWidth;canvas.height=innerHeight;

    const AREA_WIDTH=1200, AREA_HEIGHT=800;
    let player={x:600,y:400,r:25,speed:4,inventory:[],maxInventory:10,backpack:null,hunger:80,thirst:60,oxygen:90,energy:70};
    let gameState={water:0,potatoSeeds:2,oxygenSeeds:1,lastSurvivalUpdate:Date.now()};
    let missions=[
      {id:1,text:"Explore a Mina de √Ågua üíß",completed:false},
      {id:2,text:"Colete 5 unidades de √Ågua üíß",completed:false},
      {id:3,text:"Plante e colha uma Batata ü•î",completed:false},
      {id:4,text:"Equipe uma Mochila üéí",completed:false},
      {id:5,text:"Repare o M√≥dulo da Nave ‚ö°",completed:false}
    ];
    const missionPanel=document.getElementById("mission-panel");
    function updateMissions(){
      missionPanel.innerHTML="<b>üìú Miss√µes</b><br>";
      let done=0;
      missions.forEach(m=>{if(m.completed)done++; missionPanel.innerHTML+=(m.completed?"‚úÖ ":"üî∏ ")+m.text+"<br>";});
      missionPanel.innerHTML+=`<hr>Progresso: ${done}/${missions.length}`;
    }
    updateMissions();

    // pontos e inimigos
    let pointsOfInterest=[
      {x:600,y:400,type:"ship",name:"Nave Danificada",icon:"üöÄ",color:"#ff6b35"},
      {x:200,y:200,type:"water",name:"Mina de √Ågua",icon:"üíß",color:"#4fc3f7"},
      {x:1000,y:200,type:"oxygen",name:"Ponto de O¬≤",icon:"üåø",color:"#66bb6a"},
      {x:200,y:600,type:"bunker",name:"Bunker",icon:"üè†",color:"#8b4513"},
      {x:1000,y:600,type:"equipment",name:"Equipamentos",icon:"üéí",color:"#ffa726"},
      {x:600,y:700,type:"workshop",name:"Oficina",icon:"üîß",color:"#9ca3af"}
    ];
    let enemies=[{x:400,y:300,hp:30,active:true},{x:900,y:500,hp:30,active:true}];
    let bullets=[];

    // c√¢mera e joystick
    let cam={x:0,y:0},joy={active:false,x:0,y:0};
    const joystick=document.getElementById("joystick"),stick=document.getElementById("stick");
    joystick.addEventListener("touchstart",e=>{joy.active=true;if(navigator.vibrate)navigator.vibrate(10);});
    joystick.addEventListener("touchend",e=>{joy.active=false;stick.style.left="50%";stick.style.top="50%";joy.x=0;joy.y=0;});
    joystick.addEventListener("touchmove",e=>{
      e.preventDefault(); if(!joy.active)return;
      const rect=joystick.getBoundingClientRect(),t=e.touches[0];
      let dx=t.clientX-(rect.left+rect.width/2),dy=t.clientY-(rect.top+rect.height/2);
      const dist=Math.min(Math.sqrt(dx*dx+dy*dy),rect.width/2);
      const ang=Math.atan2(dy,dx);
      stick.style.left=rect.width/2+dist*Math.cos(ang)+"px";
      stick.style.top=rect.height/2+dist*Math.sin(ang)+"px";
      joy.x=Math.cos(ang)*(dist/(rect.width/2)); joy.y=Math.sin(ang)*(dist/(rect.width/2));
    });

    // Bot√µes
    document.getElementById("buttonA").addEventListener("touchstart",()=>{shootProjectile();});
    document.getElementById("buttonB").addEventListener("touchstart",()=>{showMessage(`üì¶ Invent√°rio: ${player.inventory.length}/${player.maxInventory}`);});
    document.getElementById("buttonC").addEventListener("touchstart",()=>{showMessage("üó∫Ô∏è Mapa: NaveüöÄ √Åguaüíß O¬≤üåø Bunkerüè† Oficinaüîß");});
    document.getElementById("buttonD").addEventListener("touchstart",()=>{scanArea();});

    function shootProjectile(){
      if(Date.now()-lastShot<500)return;
      lastShot=Date.now();
      const angle=Math.atan2(joy.y,joy.x);
      if(joy.x===0&&joy.y===0)return showMessage("üëâ Use o joystick para mirar!");
      bullets.push({x:player.x,y:player.y,dx:Math.cos(angle)*8,dy:Math.sin(angle)*8});
      if(navigator.vibrate)navigator.vibrate(20);
    }
    let lastShot=0;

    // Sistema principal
    function showMessage(txt){
      const m=document.createElement("div");
      m.textContent=txt;
      m.style.cssText="position:fixed;top:100px;left:50%;transform:translateX(-50%);background:rgba(0,0,0,0.9);color:#00bfff;padding:10px 20px;border-radius:10px;border:2px solid #00bfff;font-weight:bold;animation:fade 3s ease-in-out forwards;z-index:999";
      document.body.appendChild(m); setTimeout(()=>m.remove(),3000);
    }
    function updateSurvivalHUD(){
      document.querySelector(".hunger").style.width=player.hunger+"%";
      document.querySelector(".thirst").style.width=player.thirst+"%";
      document.querySelector(".oxygen").style.width=player.oxygen+"%";
      document.querySelector(".energy").style.width=player.energy+"%";
    }

    function updateSurvival(){
      const now=Date.now();
      if(now-gameState.lastSurvivalUpdate>5000){
        player.hunger=Math.max(0,player.hunger-1);
        player.thirst=Math.max(0,player.thirst-1.2);
        player.oxygen=Math.max(0,player.oxygen-0.4);
        player.energy=Math.max(0,player.energy-0.6);
        gameState.lastSurvivalUpdate=now;
        updateSurvivalHUD();
      }
    }

    let timeOfDay=12;
    function updateDayCycle(){
      timeOfDay=(timeOfDay+0.01)%24;
      const isNight=timeOfDay>=18||timeOfDay<6;
      const grad=ctx.createLinearGradient(0,0,0,AREA_HEIGHT);
      grad.addColorStop(0,isNight?"#0f172a":"#4a5568");
      grad.addColorStop(1,isNight?"#1e293b":"#94a3b8");
      ctx.fillStyle=grad;
      ctx.fillRect(0,0,AREA_WIDTH,AREA_HEIGHT);
      if(isNight&&Math.random()<0.001){showMessage("üåí A noite cai..."); player.energy=Math.max(0,player.energy-2);}
    }

    function drawPoints(){
      pointsOfInterest.forEach(p=>{
        ctx.fillStyle=p.color; ctx.beginPath(); ctx.arc(p.x,p.y,40,0,Math.PI*2); ctx.fill();
        ctx.strokeStyle="#fff"; ctx.lineWidth=3; ctx.stroke();
        ctx.font="30px Arial"; ctx.fillStyle="#fff"; ctx.textAlign="center"; ctx.fillText(p.icon,p.x,p.y+10);
      });
    }
    function drawPlayer(){
      ctx.fillStyle="#1e40af"; ctx.beginPath(); ctx.arc(player.x,player.y,player.r,0,Math.PI*2); ctx.fill();
      ctx.strokeStyle="#3b82f6"; ctx.lineWidth=4; ctx.stroke();
      ctx.fillStyle="rgba(0,191,255,0.8)"; ctx.beginPath(); ctx.arc(player.x,player.y-3,player.r*0.6,0,Math.PI*2); ctx.fill();
    }
    function drawEnemies(){
      enemies.forEach(e=>{
        if(!e.active)return;
        const dx=player.x-e.x,dy=player.y-e.y,d=Math.hypot(dx,dy);
        if(d<200){e.x+=dx/d*0.3; e.y+=dy/d*0.3;}
        ctx.fillStyle="#8b0000"; ctx.beginPath(); ctx.arc(e.x,e.y,20,0,Math.PI*2); ctx.fill(); ctx.strokeStyle="#ff0000"; ctx.stroke();
      });
    }
    function drawBullets(){
      bullets.forEach((b,i)=>{
        b.x+=b.dx; b.y+=b.dy;
        ctx.fillStyle="#00ffff"; ctx.beginPath(); ctx.arc(b.x,b.y,5,0,Math.PI*2); ctx.fill();
        enemies.forEach(e=>{
          if(e.active&&Math.hypot(b.x-e.x,b.y-e.y)<25){e.hp-=15; bullets.splice(i,1);
            if(e.hp<=0){e.active=false; showMessage("üëæ Inimigo derrotado!"); player.inventory.push("üíé");}
          }
        });
      });
    }

    function saveGame(){localStorage.setItem("zyroSave",JSON.stringify({player,gameState,missions,timeOfDay}));}
    function loadGame(){
      const s=localStorage.getItem("zyroSave");
      if(s){const d=JSON.parse(s);Object.assign(player,d.player);Object.assign(gameState,d.gameState);missions=d.missions||missions;timeOfDay=d.timeOfDay||12;updateMissions();updateSurvivalHUD();showMessage("üíæ Jogo carregado!");}
    }
    loadGame();

    function loop(){
      player.x+=joy.x*player.speed; player.y+=joy.y*player.speed;
      player.x=Math.max(player.r,Math.min(AREA_WIDTH-player.r,player.x));
      player.y=Math.max(player.r,Math.min(AREA_HEIGHT-player.r,player.y));
      cam.x=Math.max(0,Math.min(AREA_WIDTH-canvas.width,player.x-canvas.width/2));
      cam.y=Math.max(0,Math.min(AREA_HEIGHT-canvas.height,player.y-canvas.height/2));
      updateSurvival(); ctx.save(); ctx.translate(-cam.x,-cam.y);
      updateDayCycle(); drawPoints(); drawEnemies(); drawBullets(); drawPlayer();
      ctx.restore(); saveGame(); requestAnimationFrame(loop);
    }
    function scanArea(){
      const near=pointsOfInterest.filter(p=>Math.hypot(p.x-player.x,p.y-player.y)<200).map(p=>p.name);
      showMessage(near.length?"üîç Detectado: "+near.join(", "):"Nada detectado");
    }
    showMessage("üöÄ Bem-vindo ao ZYRO v0.2!");
    loop();
  </script>
</body>
</html>
